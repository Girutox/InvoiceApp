@use 'styles/variables';

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}

/*
  2. Remove default margin
*/
* {
  margin: 0;
}

/*
  3. Allow percentage-based heights in the application
*/
// html, body {
//   height: 100%;
// }
/*
  Typographic tweaks!
  4. Add accessible line-height
  5. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}

/*
  6. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}

/*
  7. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}

/*
  8. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

/*
  9. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

// *****************************************************

body {
  font-family: 'Spartan Medium', sans-serif;

  background-color: variables.$background-light;
}

.body1 {
  font-weight: 500;
  font-size: 11px;
  line-height: 18px;

  letter-spacing: -0.229167px;

  color: variables.$secondary-4;
}

.body2 {
  font-weight: 500;
  font-size: 12px;
  line-height: 15px;

  letter-spacing: -0.25px;

  color: variables.$secondary-4;
}

.text-bold {
  font-weight: 700;
}

.logoResize {
  transform: scale(2.2);

  &__sm {
    transform: scale(1.7);
  }
}

.fill {
  &-white {
    fill: #fff;
  }

  &-primary {
    fill: variables.$primary;
  }
}

.bgc {
  &-white {
    background-color: #fff;
  }

  &-primary {
    background-color: variables.$primary;
  }

  &-primary-2 {
    background-color: variables.$primary-2;
  }

  &-primary-3 {
    background-color: variables.$primary-3;
  }

  &-primary-4 {
    background-color: variables.$primary-4;
  }

  &-secondary {
    background-color: variables.$secondary;
  }

  &-secondary-2 {
    background-color: variables.$secondary-2;
  }

  &-secondary-3 {
    background-color: variables.$secondary-3;
  }

  &-secondary-4 {
    background-color: variables.$secondary-4;
  }

  &-alert {
    background-color: variables.$alert;
  }

  &-alert-2 {
    background-color: variables.$alert-2;
  }

  &-background-light {
    background-color: variables.$background-light;

    &__colorDisplay {
      border: 1px solid variables.$secondary-2;
    }
  }

  &-alert-4 {
    background-color: variables.$alert-4;
  }

  &-unknown-1 {
    background-color: #f9fafe;
  }

  &-unknown-2 {
    background-color: rgb(55, 59, 83);

    &__opacity {
      background-color: rgb(55, 59, 83, 0.06);
    }
  }

  &-unknown-3 {
    background-color: rgb(51, 214, 159);

    &__opacity {
      background-color: rgb(51, 214, 159, 0.06);
    }
  }

  &-unknown-4 {
    background-color: rgb(255, 143, 0);

    &__opacity {
      background-color: rgb(255, 143, 0, 0.06);
    }
  }
}

.color {
  &-white {
    color: #fff;
  }

  &-primary {
    color: variables.$primary;
  }

  &-secondary {
    color: variables.$secondary;
  }

  &-secondary-2 {
    color: variables.$secondary-2;
  }

  &-secondary-3 {
    color: variables.$secondary-3;
  }

  &-secondary-4 {
    color: variables.$secondary-4;
  }

  &-unknown-2 {
    color: #373b53;

    &__opacity {
      color: rgb(55, 59, 83, 0.06);
    }
  }

  &-unknown-3 {
    color: #33d69f;

    &__opacity {
      color: rgb(51, 214, 159, 0.5);
    }
  }

  &-unknown-4 {
    color: #ff8f00;

    &__opacity {
      color: rgb(255, 143, 0.06);
    }
  }
}

.app-container {
  display: flex;
  justify-content: space-between;

  position: relative;

  min-height: 100vh;
}

.app-mainContainer {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-grow: 1;

  padding: 20px 20px;

  overflow: auto;
  min-height: 100vh;
  height: 1px;
  // min-width: calc(100vw - 72px);

  flex-wrap: wrap;
}

@font-face {
  font-family: 'Spartan Medium';
  src: local('Spartan-Medium'), url('./fonts/Spartan-Medium.ttf') format('truetype');
}

@font-face {
  font-family: 'Spartan Bold';
  src: local('Spartan-Bold'), url('./fonts/Spartan-Bold.ttf') format('truetype');
}

@media (max-width: 768px) {
  .app-container {
    flex-direction: column;
  }

  .app-mainContainer {
    align-items: flex-start;
    // min-width: 100vh;
    min-height: calc(100vh - 72px);
  }
}